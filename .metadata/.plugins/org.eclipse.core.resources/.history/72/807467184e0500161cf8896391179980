package com.capgemini.java;

import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class Hand implements Comparable<Hand> {
	private Map<CardValue, Integer> hand = new TreeMap<>();
	private boolean isColor;

	public void addCardsToHand(List<Card> cardList) {
		checkCardsColor(cardList);
		for (Card card : cardList) {
			int cardValueCounter = 0;
			if (hand.get(card.getCardValue()) != null) {
				cardValueCounter = hand.get(card.getCardValue());
			}
			hand.put(card.getCardValue(), 1 + cardValueCounter);
		}
		sortCards();
	}

	private boolean checkColor(List<Card> cardList) {
		String firstCardColor = "";
		for (Card card : cardList) {
			if (firstCardColor.isEmpty()) {
				firstCardColor = card.getCardColor();
			}
			if (card.getCardColor() != firstCardColor) {
				this.isColor = false;
			}
		}
		this.isColor = true;
	}

	public int calculateSetupValue() {

		return 0;
	}

	private void sortCards() {
		

	}

	@Override
	public int compareTo(Hand arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

}
