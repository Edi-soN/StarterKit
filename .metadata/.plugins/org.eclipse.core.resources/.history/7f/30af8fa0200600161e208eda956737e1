package com.capgemini.test;

import static org.junit.Assert.*;

import org.junit.Test;

import com.capgemini.java.Game;

public class BowlingTest {

	@Test
	public void shouldReturnScoreZeroForZeroRolls() {
		// given
		Game game = new Game();
		// when
		int result = game.score();
		// then
		assertEquals(0, result);
	}

	@Test
	public void shouldReturnScoreZeroForZerosOnly() {
		// given
		Game game = new Game();
		for (int i = 0; i < 12; i++) {
			game.roll(0);
		}
		// when
		int result = game.score();
		// then
		assertEquals(0, result);
	}

	@Test(expected = IllegalArgumentException.class)
	public void shouldReturnExceptionForNegativeNumberOfPins() {
		// given
		Game game = new Game();
		game.roll(-1);
	}

	@Test(expected = IllegalArgumentException.class)
	public void shouldReturnExceptionForNumberOfPinsOverTenInSingleRoll() {
		// given
		Game game = new Game();
		game.roll(11);
	}

	@Test
	public void shouldReturnMaxScore() {
		// given
		Game game = new Game();
		for (int i = 0; i < 12; i++) {
			game.roll(10);
		}
		// when
		int result = game.score();
		// then
		assertEquals(300, result);
	}
	
	@Test
	public void shouldReturnTenForOnesOnly() {
		// given
		Game game = new Game();
		for (int i = 0; i < 12; i++) {
			game.roll(1);
		}
		// when
		int result = game.score();
		// then
		assertEquals(10, result);
	}
	
	@Test
	public void shouldReturnTwenty() {
		// given
		Game game = new Game();
		game.roll(10);
		game.roll(5);
		// when
		int result = game.score();
		// then
		assertEquals(20, result);
	}
}
