package com.capgemini.java;

import java.util.ArrayList;
import java.util.List;

public class CardValidator {
	private static final int NUMBER_OF_SIGNS_IN_LINE = 20;
	private String lineOfCards = "";
	private List<String[]> cardList = new ArrayList<>();

	private void clearLineFromWhiteSpaces(String line) {
		this.lineOfCards = line.replaceAll("\\s+", "");
	}

	private boolean isValidCard(String card) {
		String[] cardFigureAndColor = new String[2];
		cardFigureAndColor[0] = card.substring(0, 1);
		cardFigureAndColor[1] = card.substring(1, 1);
		if(cardFigureAndColor[0].matches("[AKQJT98765432]") && cardFigureAndColor[1].matches("[SHDC]") && !cardList.contains(cardFigureAndColor)){
			cardList.add(cardFigureAndColor);
			return true;
		}
		return false;
	}

	private boolean isCorrectNumberOfSignsInLine() {
		return lineOfCards.length() == NUMBER_OF_SIGNS_IN_LINE;
	}

	public List<String[]> getValidatedCards(String line) {
		clearLineFromWhiteSpaces(line);
		if (!isCorrectNumberOfSignsInLine()) {
			throw new IllegalArgumentException("Incorrect number of cards for a single game");
		}
		for (int i = 0; i < lineOfCards.length(); i += 2) {
			String singleCard = lineOfCards.substring(i, i + 2);
			if (!isValidCard(singleCard)) {
				throw new IllegalArgumentException("Incorrect card signature");
			}
			String[] validatedCard = new String[2];
			validatedCard[0] = lineOfCards.substring(i, i + 1);
			validatedCard[1] = lineOfCards.substring(i + 1, i + 2);
			cardList.add(validatedCard);
		}
		return cardList;
	}
}
